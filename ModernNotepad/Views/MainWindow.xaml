<Window x:Class="ModernNotepad.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:behaviors="clr-namespace:ModernNotepad.Behaviors"
        xmlns:cc="clr-namespace:ModernNotepad.CustomControls"
        xmlns:util="clr-namespace:ModernNotepad.Util"
        mc:Ignorable="d"
        Title="{Binding Title, StringFormat='\{0\} - Modern Notepad'}" 
        Height="600" Width="900"
        WindowStartupLocation="CenterScreen"
        ui:WindowHelper.UseModernWindowStyle="True"
        FocusManager.FocusedElement="{Binding ElementName=textArea}">

    <Window.Style>
        <Style TargetType="Window" BasedOn="{StaticResource DefaultWindowStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsInPreviewMode}" Value="True">
                    <Setter Property="WindowState" Value="Maximized"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ClosingWindowCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.InputBindings>
        <KeyBinding Command="{Binding OpenNewWindowCommand}" Gesture="Ctrl+Shift+N"/>
        <KeyBinding Command="{Binding TextEditor.CreateNewDocumentCommand}" Gesture="Ctrl+N"/>
        <KeyBinding Command="{Binding TextEditor.OpenFileCommand}" Gesture="Ctrl+A"/>
        <KeyBinding Command="{Binding TextEditor.SaveFileCommand}" Gesture="Ctrl+S"/>
        <KeyBinding Command="{Binding ShowFindReplaceWindowCommand}" Gesture="Ctrl+F"/>
        <KeyBinding Command="{Binding TextEditor.SaveFileAsCommand}" Gesture="Ctrl+Shift+S"/>        
    </Window.InputBindings>

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibility"/>
        <util:BooleanToTextWrappingConverter x:Key="BooleanToTextWrapping"/>
        <util:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibility"/>
        <util:StringToFlowDocumentConverter x:Key="StringToFlowDocument"/>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <ui:CommandBar Grid.Row="0" DefaultLabelPosition="Right" MaxHeight="40"
                       Visibility="{Binding IsInPreviewMode, Converter={StaticResource InverseBooleanToVisibility}}">            
            <ui:AppBarButton Label="{DynamicResource New}" Command="{Binding TextEditor.CreateNewDocumentCommand}"
                             ToolTip="{DynamicResource NewFileToolTip}" Icon="Document" ToolTipService.Placement="Bottom">                
            </ui:AppBarButton>
            <ui:AppBarButton Label="{DynamicResource Open}" Command="{Binding TextEditor.OpenFileCommand}"
                             ToolTip="{DynamicResource OpenToolTip}" Icon="OpenFile" ToolTipService.Placement="Bottom">                
            </ui:AppBarButton>
            <ui:AppBarButton Label="{DynamicResource Save}" Command="{Binding TextEditor.SaveFileCommand}"
                             ToolTip="{DynamicResource SaveToolTip}" Icon="Save" ToolTipService.Placement="Bottom">                
            </ui:AppBarButton>
            <ui:AppBarButton Label="{DynamicResource Find}" Command="{Binding ShowFindReplaceWindowCommand}"
                             ToolTip="{DynamicResource FindToolTip}" Icon="Find" ToolTipService.Placement="Bottom">                
            </ui:AppBarButton>
            <ui:AppBarElementContainer>
                <ui:DropDownButton Background="Transparent" MinHeight="40" ToolTip="{DynamicResource FormatToolTip}"
                                   ToolTipService.Placement="Bottom">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="&#xE104;" FontFamily="Segoe MDL2 Assets" Margin="5,4,4,0"/>
                        <TextBlock Text="{DynamicResource Format}" Margin="4,0,5,0"/>
                    </StackPanel>
                    <ui:DropDownButton.Flyout>
                        <ui:MenuFlyout Placement="BottomEdgeAlignedLeft">
                            <MenuItem Header="{DynamicResource TextWrapping}" IsCheckable="True" IsChecked="{Binding IsWordWrapEnabled}" 
                                      ToolTip="{DynamicResource TextWrappingToolTip}" ToolTipService.Placement="Right"/>
                            <MenuItem Header="{DynamicResource SpellCheck}" IsCheckable="True" IsChecked="{Binding IsSpellCheckingEnabled}" 
                                      ToolTip="{DynamicResource SpellCheckToolTip}" ToolTipService.Placement="Right"/>
                        </ui:MenuFlyout>
                    </ui:DropDownButton.Flyout>
                </ui:DropDownButton>
            </ui:AppBarElementContainer>
            <ui:AppBarButton Label="{DynamicResource Font}" Command="{Binding ShowFontSettingsWindowCommand}"
                             ToolTip="{DynamicResource FontToolTip}" Icon="Font">                
            </ui:AppBarButton>
            <ui:AppBarButton Label="PrintPreview" ToolTip="Show Print Preview" Command="{Binding ShowPrintPreviewCommand}">
                <ui:AppBarButton.Icon>
                    <ui:FontIcon Glyph="&#xE956;"/>
                </ui:AppBarButton.Icon>
            </ui:AppBarButton>

            <ui:CommandBar.Content>
                <ui:AppBarButton Command="{Binding OpenNewWindowCommand}" ToolTip="{DynamicResource NewWindowToolTip}">
                    <ui:AppBarButton.Icon>
                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE109;"/>
                    </ui:AppBarButton.Icon>
                </ui:AppBarButton>
            </ui:CommandBar.Content>
            
            <ui:CommandBar.SecondaryCommands>
                <ui:AppBarButton Label="{DynamicResource SaveAs}" Command="{Binding TextEditor.SaveFileAsCommand}"
                                 ToolTip="{DynamicResource SaveAsToolTip}" ToolTipService.Placement="Left">
                    <ui:AppBarButton.Icon>
                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE792;"/>
                    </ui:AppBarButton.Icon>
                </ui:AppBarButton>
                <ui:AppBarSeparator/>
                <ui:AppBarToggleButton Label="{DynamicResource StatusBar}" IsChecked="{Binding IsStatusBarVisible}"
                                       ToolTip="{DynamicResource StatusBarToolTip}" ToolTipService.Placement="Left">
                    <ui:AppBarToggleButton.Icon>
                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xEF2D;"/>
                    </ui:AppBarToggleButton.Icon>
                </ui:AppBarToggleButton>
                <ui:AppBarToggleButton Label="{DynamicResource DarkTheme}"  IsChecked="{Binding IsDarkThemeEnabled}" 
                                       Command="{Binding ToggleThemeCommand}"
                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}"
                                       ToolTip="{DynamicResource DarkThemeToolTip}" ToolTipService.Placement="Left">
                    <ui:AppBarToggleButton.Icon>
                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE793;"/>
                    </ui:AppBarToggleButton.Icon>
                </ui:AppBarToggleButton>
                <ui:AppBarSeparator/>
                <ui:AppBarButton Label="{DynamicResource AboutModernNotepad}" Command="{Binding ShowAboutWindowCommand}"
                                 ToolTip="{DynamicResource AboutToolTip}" ToolTipService.Placement="Left">
                    <ui:AppBarButton.Icon>
                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE946;"/>
                    </ui:AppBarButton.Icon>
                </ui:AppBarButton>
                <ui:AppBarButton Label="{DynamicResource Close}" Icon="Clear" Command="{Binding CloseWindowCommand}"
                                 ToolTip="{DynamicResource CloseProgramToolTip}" ToolTipService.Placement="Left"/>
            </ui:CommandBar.SecondaryCommands>
        </ui:CommandBar>

        <ui:CommandBar Visibility="{Binding IsInPreviewMode, Converter={StaticResource BooleanToVisibility}}">
            <ui:AppBarButton Icon="Print" ToolTip="Open Print Dialog" Command="{Binding PrintCommand}"/>
            <ui:AppBarButton Label="" ToolTip="Previous Page" Command="{x:Static NavigationCommands.PreviousPage}"
                             CommandTarget="{Binding Source={x:Reference pageViewer}}">
                <ui:AppBarButton.Icon>
                    <ui:FontIcon Glyph="&#xE00E;"/>
                </ui:AppBarButton.Icon>
            </ui:AppBarButton>
            <ui:AppBarButton Label="" ToolTip="Next Page" Command="{x:Static NavigationCommands.NextPage}"
                             CommandTarget="{Binding Source={x:Reference pageViewer}}">
                <ui:AppBarButton.Icon>
                    <ui:FontIcon Glyph="&#xE00F;"/>
                </ui:AppBarButton.Icon>
            </ui:AppBarButton>
            <ui:AppBarButton Icon="Cancel" ToolTip="Close Print Preview" Command="{Binding ClosePrintPreviewCommand}"/>
        </ui:CommandBar>

        <ui:CommandBar Grid.Row="2" MaxHeight="40" DefaultLabelPosition="Right" 
                       Visibility="{Binding IsStatusBarVisible, Converter={StaticResource BooleanToVisibility}}">
            <ui:AppBarElementContainer>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Name="currentLine" Text="{DynamicResource LineOne}" FontSize="12" Margin="5,12,10,0"/>
                    <TextBlock Name="currentChar" Text="{DynamicResource CharOne}" FontSize="12" Margin="10,12,10,0"/>
                </StackPanel>
            </ui:AppBarElementContainer>
            <ui:CommandBar.Content>
                <TextBlock Text="{Binding FilePath}" Margin="10,12,0,0" FontSize="12"/>
            </ui:CommandBar.Content>
            <ui:CommandBar.Style>
                <Style TargetType="ui:CommandBar">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsInPreviewMode}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ui:CommandBar.Style>
        </ui:CommandBar>

        <Popup AllowsTransparency="True" Placement="Bottom" PopupAnimation="Fade" IsOpen="{Binding ShouldPopupBeOpen}">
            <Border BorderThickness="1" CornerRadius="5" Padding="10">
                <TextBlock FontFamily="{x:Static SystemFonts.MessageFontFamily}">
                    <Run Text="{DynamicResource NoFindResults}"/>
                    <Run Text="{Binding FindReplace.TextToFind, StringFormat=' &quot;\{0\}&quot;'}"/>
                </TextBlock>
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Background" Value="WhiteSmoke"/>
                        <Setter Property="BorderBrush" Value="WhiteSmoke"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDarkThemeEnabled}" Value="True">
                                <Setter Property="Background" Value="#323232"/>
                                <Setter Property="BorderBrush" Value="#323232"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>            
            <i:Interaction.Behaviors>
                <behaviors:PopupOpenedBehavior/>
            </i:Interaction.Behaviors>
        </Popup>

        <cc:TextArea x:Name="textArea" Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                     IsInactiveSelectionHighlightEnabled="True"
                     Visibility="{Binding IsInPreviewMode, Converter={StaticResource InverseBooleanToVisibility}}"
                     SpellCheck.IsEnabled="{Binding IsSpellCheckingEnabled}" Style="{StaticResource DefaultTextBoxStyle}"
                     TextWrapping="{Binding IsWordWrapEnabled, Converter={StaticResource BooleanToTextWrapping}}">
            <i:Interaction.Behaviors>
                <behaviors:PasteContentBehavior/>
                <behaviors:SelectionChangedBehavior CurrentLine="{Binding ElementName=currentLine, Path=Text, Mode=TwoWay}"
                                                    CurrentCharacter="{Binding ElementName=currentChar, Path=Text, Mode=TwoWay}"/>
                <behaviors:TextChangedBehavior/>
            </i:Interaction.Behaviors>                        
        </cc:TextArea>

        <FlowDocumentPageViewer Name="pageViewer" Grid.Row="1" Foreground="Black"
                                
                                Visibility="{Binding IsInPreviewMode, Converter={StaticResource BooleanToVisibility}}">
            <FlowDocumentPageViewer.Template>
                <ControlTemplate TargetType="FlowDocumentPageViewer">
                    <Viewbox Margin="0,10">
                        <Border BorderBrush="Gray" BorderThickness="1" Background="White"
                                Width="Auto" Height="Auto" Margin="0.5,0.5,0,0">
                            <DocumentPageView FlowDocumentPageViewer.IsMasterPage="True"/>
                        </Border>
                    </Viewbox>
                </ControlTemplate>
            </FlowDocumentPageViewer.Template>
        </FlowDocumentPageViewer>
    </Grid>
</Window>